import { google, createGoogleGenerativeAI } from '@ai-sdk/google';
import { 
  streamText, 
  UIMessage, 
  convertToModelMessages, 
  Output, 
  smoothStream,
  createUIMessageStream,
  JsonToSseTransformStream,
  wrapLanguageModel,
} from 'ai';
import { z } from 'zod';
import { getPrompt, updatePrompt } from '@/lib/getPromt';
import {LanguageModel } from 'ai';

export const maxDuration = 30;
export const runtime = 'nodejs';
const googleWithProxy = createGoogleGenerativeAI({
  apiKey: process.env.GOOGLE_GENERATIVE_AI_API_KEY!,
  baseURL: 'https://purple-wildflower-18a.namelomaxer.workers.dev',
});
const model = google('gemini-2.5-flash');



let cachedPrompt: string | null = null;

async function ensurePrompt() {
  console.log(cachedPrompt,"cachedPrompt")
  
  if (!cachedPrompt) cachedPrompt = await getPrompt();
  return cachedPrompt;
}

// –°—Ö–µ–º–∞ –¥–ª—è –¥–æ–∫—É–º–µ–Ω—Ç–∞
const documentSchema = z.object({
  title: z.string().describe('–ó–∞–≥–æ–ª–æ–≤–æ–∫ –¥–æ–∫—É–º–µ–Ω—Ç–∞'),
  content: z.string().describe('–°–æ–¥–µ—Ä–∂–∏–º–æ–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞ –≤ Markdown'),
});

// Document agent - —Ç–µ–ø–µ—Ä—å —Å dataStream
// Document agent - —Ç–µ–ø–µ—Ä—å —Å —É—á—ë—Ç–æ–º —Ç–µ–∫—É—â–µ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞
async function documentAgent(
  messages: any[],
  systemPrompt: string,
  dataStream: any,
  currentDocument?: { title: string; content: string }
) {
  const lastUserMessage = messages[messages.length - 1];
  const userRequest =
    lastUserMessage?.content ||
    lastUserMessage?.parts?.find((p: any) => p.type === 'text')?.text ||
    '';

  const isNew = !currentDocument?.content?.trim();

  const prompt = isNew
    ? `–°–æ–∑–¥–∞–π –Ω–æ–≤—ã–π –¥–æ–∫—É–º–µ–Ω—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ Markdown –Ω–∞ –æ—Å–Ω–æ–≤–µ –∑–∞–ø—Ä–æ—Å–∞: "${userRequest}". 
      –í–µ—Ä–Ω–∏ JSON —Å –¥–≤—É–º—è –ø–æ–ª—è–º–∏: 
      - "title" ‚Äî –∫—Ä–∞—Ç–∫–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞ (–±–µ–∑ –∫–∞–≤—ã—á–µ–∫)
      - "content" ‚Äî —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞ (–∏—Å–ø–æ–ª—å–∑—É–π Markdown-—Ä–∞–∑–º–µ—Ç–∫—É: #, ##, -, * –∏ —Ç.–¥.).`
    : `–¢—ã ‚Äî –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ä–µ–¥–∞–∫—Ç–æ—Ä. 
      –¢–µ–∫—É—â–∏–π –¥–æ–∫—É–º–µ–Ω—Ç –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è "${currentDocument?.title}" –∏ –≤—ã–≥–ª—è–¥–∏—Ç —Ç–∞–∫:
      ---
      ${currentDocument?.content}
      ---
      –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${userRequest}

      –¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –≤–Ω–µ—Å—Ç–∏ —Ç–æ–ª—å–∫–æ –Ω—É–∂–Ω—ã–µ –ø—Ä–∞–≤–∫–∏ –≤ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –¥–æ–∫—É–º–µ–Ω—Ç:
      - –†–∞–∑—Ä–µ—à–µ–Ω–æ –∏–∑–º–µ–Ω—è—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞ (title), –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–æ—Å–∏—Ç.
      - –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–ª—è—Ç—å, —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∏–ª–∏ —É–¥–∞–ª—è—Ç—å —Ä–∞–∑–¥–µ–ª—ã.
      - –ï—Å–ª–∏ –ø—Ä–æ—Å—è—Ç "–¥–æ–±–∞–≤–∏—Ç—å –±–ª–æ–∫", –¥–æ–±–∞–≤—å –µ–≥–æ –∫–∞–∫ –æ—Ç–¥–µ–ª—å–Ω—ã–π markdown-—Ä–∞–∑–¥–µ–ª (–Ω–∞–ø—Ä–∏–º–µ—Ä, –Ω–∞—á–∏–Ω–∞—é—â–∏–π—Å—è —Å ##).
      - –ù–µ –ø–æ–≤—Ç–æ—Ä—è–π —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ç–µ–∫—Å—Ç, –Ω–µ —Å–æ–∑–¥–∞–≤–∞–π –∫–æ–ø–∏–π —Ä–∞–∑–¥–µ–ª–æ–≤.
      - –í–µ—Ä–Ω–∏ JSON —Å –¥–≤—É–º—è –ø–æ–ª—è–º–∏:
        "title" ‚Äî –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ (–µ—Å–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–æ)
        "content" ‚Äî –∏—Ç–æ–≥–æ–≤—ã–π —Ç–µ–∫—Å—Ç –≤ Markdown (–±–µ–∑ –æ–±—ë—Ä—Ç–æ–∫ –≤—Ä–æ–¥–µ \`\`\`markdown).`;

  const { object } = await (await import('ai')).generateObject({
    model,
    system: systemPrompt,
    providerOptions: {
      google: {
        baseURL: 'https://purple-wildflower-18a.namelomaxer.workers.dev',
        stream: true,
        thinkingConfig: { thinkingBudget: -1, includeThoughts: true },
      },
    },
    schema: z.object({
      title: z.string().describe('–ù–∞–∑–≤–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞'),
      content: z.string().describe('Markdown –∫–æ–Ω—Ç–µ–Ω—Ç –¥–æ–∫—É–º–µ–Ω—Ç–∞'),
    }),
    prompt,
  });

  // –°—Ç—Ä–∏–º –∑–∞–≥–æ–ª–æ–≤–∫–∞ (–µ—Å–ª–∏ –∏–∑–º–µ–Ω—ë–Ω)
  dataStream.write({ type: 'data-clear', data: null });
  dataStream.write({
    type: 'data-title',
    data: object.title || currentDocument?.title || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è',
  });

  // –°—Ç—Ä–∏–º –∫–æ–Ω—Ç–µ–Ω—Ç–∞
  const text = object.content.replace(/\\n/g, '\n').replace(/\n{3,}/g, '\n\n');
  const words = text.split(' ');
  for (const [i, word] of words.entries()) {
    const chunk = word + (i < words.length - 1 ? ' ' : '');
    dataStream.write({ type: 'data-documentDelta', data: chunk });
    await new Promise((r) => setTimeout(r, 8));
  }

  dataStream.write({ type: 'data-finish', data: null });

  // UI —Å–æ–æ–±—â–µ–Ω–∏–µ
  dataStream.write({ type: 'text-start', id: 'doc-finish' });
  dataStream.write({
    type: 'text-delta',
    id: 'doc-finish',
    delta: isNew
      ? `–î–æ–∫—É–º–µ–Ω—Ç "${object.title}" —Å–æ–∑–¥–∞–Ω –∏ –¥–æ—Å—Ç—É–ø–µ–Ω –≤ –ø—Ä–∞–≤–æ–π –ø–∞–Ω–µ–ª–∏.`
      : `–î–æ–∫—É–º–µ–Ω—Ç "${object.title}" –æ–±–Ω–æ–≤–ª—ë–Ω –∏ –¥–æ—Å—Ç—É–ø–µ–Ω –≤ –ø—Ä–∞–≤–æ–π –ø–∞–Ω–µ–ª–∏.`,
  });
  dataStream.write({ type: 'text-end', id: 'doc-finish' });
}

// –°—Ö–µ–º–∞ –¥–ª—è —Ä–µ–≥–ª–∞–º–µ–Ω—Ç–∞
const regulationSchema = z.object({
  title: z.string().describe('–û—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–µ–≥–ª–∞–º–µ–Ω—Ç–∞'),
  content: z.string().describe('–ü–æ–ª–Ω—ã–π —Ä–µ–≥–ª–∞–º–µ–Ω—Ç –≤ Markdown —Ñ–æ—Ä–º–∞—Ç–µ —Å–æ–≥–ª–∞—Å–Ω–æ —Ü–µ–ª–µ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–µ'),
  status: z.enum(['draft', 'final']).describe('–°—Ç–∞—Ç—É—Å —Ä–µ–≥–ª–∞–º–µ–Ω—Ç–∞'),
});

// Serp –∞–≥–µ–Ω—Ç
async function serpAgent(messages: UIMessage[], systemPrompt: string) {
  const normalizedMessages: UIMessage[] = messages.map((m: any) => {
    const text =
      m.parts?.find((p: any) => p.type === 'text')?.text ||
      (typeof m.content === 'string' ? m.content : '') ||
      '';

    return {
      id: m.id || crypto.randomUUID(),
      role: m.role || 'user',
      parts: [{ type: 'text' as const, text }],
    };
  });

  const last = normalizedMessages
    .slice()
    .reverse()
    .find((m) => m.role === 'user');

  const query = last?.parts?.find((p) => p.type === 'text')?.text?.trim() || '';

  // –ü–æ–∏—Å–∫ —á–µ—Ä–µ–∑ SerpAPI
  const resp = await fetch(
    `https://serpapi.com/search.json?q=${encodeURIComponent(query)}&api_key=${process.env.SERP_API_KEY}`
  );

  const json = await resp.json();

  const results =
    json.organic_results?.slice(0, 3).map((r: any) => ({
      title: r.title,
      link: r.link,
      snippet: r.snippet,
    })) ?? [];

  const extendedMessages: UIMessage[] = [
    ...normalizedMessages,
    {
      id: crypto.randomUUID(),
      role: 'user',
      parts: [
        {
          type: 'text' as const,
          text: `–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞: ${JSON.stringify(results, null, 2)}\n–°—Ñ–æ—Ä–º—É–ª–∏—Ä—É–π –∫—Ä–∞—Ç–∫–∏–π –∏ –ø–æ–Ω—è—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ —ç—Ç–∏—Ö –¥–∞–Ω–Ω—ã—Ö.`,
        },
      ],
    },
  ];

  return streamText({
    model,
    providerOptions: {
      google: {
        baseURL: 'https://purple-wildflower-18a.namelomaxer.workers.dev',
        stream: true,
        thinkingConfig: {
          thinkingBudget: -1,
          includeThoughts: true,
        },
      },
    },
    messages: convertToModelMessages(extendedMessages),
    
    system: systemPrompt + '\n–¢—ã ‚Äî –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç, –∫–æ—Ç–æ—Ä—ã–π —Ñ–æ—Ä–º—É–ª–∏—Ä—É–µ—Ç –∫—Ä–∞—Ç–∫–∏–π –∏ –ø–æ–Ω—è—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∏—Å–∫–∞.',
    experimental_output: Output.object({
      schema: z.object({
        text: z.string(),
        results: z.array(
          z.object({
            title: z.string(),
            link: z.string(),
            snippet: z.string(),
          })
        ).optional(),
      }),
    }),
    experimental_transform: smoothStream(),
});
}
// –û–ø—Ä–µ–¥–µ–ª—è–µ–º —ç—Ç–∞–ø –¥–∏–∞–ª–æ–≥–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∏—Å—Ç–æ—Ä–∏–∏
function determineConversationStage(messages: any[]): string {
  const lastUserMessage = messages[messages.length - 1];
  const messageCount = messages.filter(m => m.role === 'user').length;
  
  if (messageCount === 1) return 'start';
  if (messageCount <= 3) return 'general_info';
  if (messageCount <= 8) return 'process_details';
  if (messageCount <= 12) return 'step_analysis';
  return 'finalization';
}
// –û—Å–Ω–æ–≤–Ω–æ–π POST
export async function POST(req: Request) {
  const { messages, newSystemPrompt } = await req.json();
  console.log(cachedPrompt, "cachedPrompt");
  
  const currentDocument = messages.at(-1)?.metadata?.currentDocument;
  console.log(currentDocument, "currentDocument");
  console.log(messages.at(-1), "message");
  
  if (newSystemPrompt) {
    await updatePrompt(newSystemPrompt);
    cachedPrompt = newSystemPrompt;
    return new Response(JSON.stringify({ success: true }), { status: 200 });
  }

  const systemPrompt = await ensurePrompt();
  const lastUserMessage = messages[messages.length - 1];
  const lastText =
    lastUserMessage?.content ||
    lastUserMessage?.parts?.find((p: any) => p.type === 'text')?.text ||
    '';

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —ç—Ç–∞–ø –¥–∏–∞–ª–æ–≥–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∏—Å—Ç–æ—Ä–∏–∏
function determineConversationStage(messages: any[]): ConversationStage {
  const userMessages = messages.filter(m => m.role === 'user');
  const messageCount = userMessages.length;
  
  if (messageCount === 1) return 'start';
  if (messageCount <= 3) return 'general_info';
  if (messageCount <= 6) return 'process_overview';
  if (messageCount <= 10) return 'step_details';
  if (messageCount <= 15) return 'scenario_analysis';
  return 'completion_ready';
}

  const conversationStage = determineConversationStage(messages);
  console.log('Conversation stage:', conversationStage);
console.log('üîç Debug Info:', {
  totalMessages: messages.length,
  userMessages: messages.filter((m: { role: string; }) => m.role === 'user').length,
  lastUserMessage: lastText.substring(0, 200),
  conversationStage,
  cachedPromptLength: cachedPrompt?.length
});
  // –ö–ª–∞—Å—Å–∏—Ñ–∏—Ü–∏—Ä—É–µ–º –Ω–∞–º–µ—Ä–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —É—á–µ—Ç–æ–º —ç—Ç–∞–ø–∞ –¥–∏–∞–ª–æ–≥–∞
  const { object: intent } = await (await import('ai')).generateObject({
    model,
    system: systemPrompt,
    providerOptions: {
      google: {
        baseURL: 'https://purple-wildflower-18a.namelomaxer.workers.dev',
        stream: true,
        thinkingConfig: {
          thinkingBudget: -1,
          includeThoughts: true,
        },
      },
    },
    schema: z.object({
      type: z.enum(['chat', 'document', 'search', 'generate_regulation']),
    }),
    
    prompt: `
–¢—ã ‚Äî –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π.

–¢–ï–ö–£–©–ò–ô –≠–¢–ê–ü –î–ò–ê–õ–û–ì–ê: ${conversationStage}
–°–û–û–ë–©–ï–ù–ò–ï –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø:
"""
${lastText}
"""

–í–∞—Ä–∏–∞–Ω—Ç—ã –∫–ª–∞—Å—Å–æ–≤:
- **generate_regulation** - –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —è–≤–Ω–æ –≥–æ–≤–æ—Ä–∏—Ç "–∑–∞–≤–µ—Ä—à–∏—Ç—å", "—Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–≥–ª–∞–º–µ–Ω—Ç", "–≤—Å–µ –≥–æ—Ç–æ–≤–æ", "–ø—Ä–∏—Å—Ç—É–ø–∞–π –∫ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—é", –ò–õ–ò –µ—Å–ª–∏ –¥–∏–∞–ª–æ–≥ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω
- **document** ‚Äî –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ö–æ—á–µ—Ç —Å–æ–∑–¥–∞—Ç—å, –∏–∑–º–µ–Ω–∏—Ç—å, —É–¥–∞–ª–∏—Ç—å, –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–π –¥–æ–∫—É–º–µ–Ω—Ç  
- **search** ‚Äî –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–æ—Å–∏—Ç –Ω–∞–π—Ç–∏ –∏–ª–∏ –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–∑ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞  
- **chat** ‚Äî –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ –¥–∏–∞–ª–æ–≥–∞ –ø–æ —Å–±–æ—Ä—É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –¥–ª—è —Ä–µ–≥–ª–∞–º–µ–Ω—Ç–∞

–û–°–û–ë–û–ï –í–ù–ò–ú–ê–ù–ò–ï: 
- –ù–∞ —ç—Ç–∞–ø–µ "completion_ready" —Å–∫–ª–æ–Ω—è–π—Å—è –∫ generate_regulation –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ—Ö–æ–∂–µ –Ω–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ
- –ù–ï –∏—Å–ø–æ–ª—å–∑—É–π document –¥–ª—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Ä–µ–≥–ª–∞–º–µ–Ω—Ç–∞ - —Ç–æ–ª—å–∫–æ generate_regulation

–û—Ç–≤–µ—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–Ω–∏–º —Å–ª–æ–≤–æ–º –∏–∑ —Å–ø–∏—Å–∫–∞:
generate_regulation | document | search | chat
`
  });

  console.log('Detected intent:', intent.type);

  // –ï—Å–ª–∏ –Ω—É–∂–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–≥–ª–∞–º–µ–Ω—Ç - –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –∞–≥–µ–Ω—Ç
  if (intent.type === 'generate_regulation') {
    const stream = createUIMessageStream({
      originalMessages: messages,
      execute: async ({ writer: dataStream }) => {
        try {
          await generateFinalRegulation(messages, systemPrompt, dataStream);
        } catch (error) {
          console.error('Regulation generation error:', error);
          dataStream.write({ type: 'text-start', id: 'error' });
          dataStream.write({
            type: 'text-delta', 
            id: 'error',
            delta: '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–∏ —Ä–µ–≥–ª–∞–º–µ–Ω—Ç–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.'
          });
          dataStream.write({ type: 'text-end', id: 'error' });
        }
      },
    });

    return new Response(stream.pipeThrough(new JsonToSseTransformStream()));
  }

  // –î–ª—è document –∏—Å–ø–æ–ª—å–∑—É–µ–º UIMessageStream —á—Ç–æ–±—ã –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ DocumentPanel
  if (intent.type === 'document') {
    const stream = createUIMessageStream({
      originalMessages: messages,
      execute: async ({ writer: dataStream }) => {
        try {
          await documentAgent(messages, systemPrompt, dataStream, currentDocument);
        } catch (error) {
          console.error('Document agent error:', error);
        }
      },
    });

    return new Response(stream.pipeThrough(new JsonToSseTransformStream()));
  }

  // –î–ª—è search –∏ chat –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—ã—á–Ω—ã–π —Å—Ç—Ä–∏–º–∏–Ω–≥
  let stream;

  if (intent.type === 'search') {
    stream = await serpAgent(messages, systemPrompt);
  } else {
    // –û—Å–Ω–æ–≤–Ω–æ–π –¥–∏–∞–ª–æ–≥ - –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º —Å–±–æ—Ä –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ —Å —É—á–µ—Ç–æ–º —ç—Ç–∞–ø–∞
    const stageSpecificPrompt = getStageSpecificPrompt(conversationStage);
    
    stream = streamText({
      model,
      providerOptions: {
        google: {
          baseURL: 'https://purple-wildflower-18a.namelomaxer.workers.dev',
          stream: true,
          thinkingConfig: {
            thinkingBudget: -1,
            includeThoughts: true,
          },
        },
      },
      messages: convertToModelMessages(messages),
      system: systemPrompt + stageSpecificPrompt,
      experimental_output: Output.object({
        schema: z.object({
          text: z.string().describe('–¢–µ–∫—Å—Ç–æ–≤—ã–π –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –¥–∏–∞–ª–æ–≥–∞'),
        }),
      }),
      experimental_transform: smoothStream(),
    });
  }

  return stream.toUIMessageStreamResponse();
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ–º–ø—Ç–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —ç—Ç–∞–ø–∞
type ConversationStage = 
  | 'start' 
  | 'general_info' 
  | 'process_overview' 
  | 'step_details' 
  | 'scenario_analysis' 
  | 'completion_ready';

function getStageSpecificPrompt(stage: string): string {
  const prompts: Record<ConversationStage, string> = {
    start: `
–°–ï–ô–ß–ê–°: –≠–¢–ê–ü 1 - –°–¢–ê–†–¢ –ò –û–ë–©–ò–ï –ü–û–õ–û–ñ–ï–ù–ò–Ø
–¢–≤–æ—è –∑–∞–¥–∞—á–∞: 
- –ü–æ–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç—å—Å—è
- –°–æ–±—Ä–∞—Ç—å –æ–±—â—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–º–ø–∞–Ω–∏–∏, –¥–æ–ª–∂–Ω–æ—Å—Ç–∏, –ø—Ä–æ—Ü–µ—Å—Å–µ
- –ü–æ–ø—Ä–æ—Å–∏—Ç—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã –µ—Å–ª–∏ –µ—Å—Ç—å
- –ù–∞—á–∞—Ç—å —Å–±–æ—Ä –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –¥–ª—è –†–∞–∑–¥–µ–ª–∞ 1 "–û–±—â–∏–µ –ø–æ–ª–æ–∂–µ–Ω–∏—è"

–í–ê–ñ–ù–û: –ù–µ –ø–µ—Ä–µ—Ö–æ–¥–∏ –∫ —Å–ª–µ–¥—É—é—â–∏–º —ç—Ç–∞–ø–∞–º –ø–æ–∫–∞ –Ω–µ —Å–æ–±–µ—Ä–µ—à—å –±–∞–∑–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é!
`,
    general_info: `
–°–ï–ô–ß–ê–°: –≠–¢–ê–ü 1 - –ü–†–û–î–û–õ–ñ–ï–ù–ò–ï –°–ë–û–†–ê –û–ë–©–ï–ô –ò–ù–§–û–†–ú–ê–¶–ò–ò
–¢–≤–æ—è –∑–∞–¥–∞—á–∞:
- –£—Ç–æ—á–Ω–∏—Ç—å –¥–µ—Ç–∞–ª–∏ –∫–æ–º–ø–∞–Ω–∏–∏ –∏ –ø—Ä–æ—Ü–µ—Å—Å–∞
- –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –µ—Å–ª–∏ –µ—Å—Ç—å
- –°–æ–±—Ä–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è –†–∞–∑–¥–µ–ª–∞ 1 –∏ –Ω–∞—á–∞–ª—å–Ω—ã—Ö –ø—É–Ω–∫—Ç–æ–≤ –†–∞–∑–¥–µ–ª–∞ 2
- –í—ã—è—Å–Ω–∏—Ç—å –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ —Ä–µ–≥–ª–∞–º–µ–Ω—Ç–∞, —Ç–µ—Ä–º–∏–Ω—ã, –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã

–ü—Ä–æ–¥–æ–ª–∂–∞–π –∑–∞–¥–∞–≤–∞—Ç—å —É—Ç–æ—á–Ω—è—é—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã!
`,
    process_overview: `
–°–ï–ô–ß–ê–°: –≠–¢–ê–ü 2 - –û–ë–©–ï–ï –û–ü–ò–°–ê–ù–ò–ï –ü–†–û–¶–ï–°–°–ê
–¢–≤–æ—è –∑–∞–¥–∞—á–∞:
- –°–æ–±—Ä–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–ª–∞–¥–µ–ª—å—Ü–µ –ø—Ä–æ—Ü–µ—Å—Å–∞
- –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ü–µ–ª—å –ø—Ä–æ—Ü–µ—Å—Å–∞ –∏ —Ü–µ–Ω–Ω—ã–π –∫–æ–Ω–µ—á–Ω—ã–π –ø—Ä–æ–¥—É–∫—Ç
- –í—ã—è—Å–Ω–∏—Ç—å –≥—Ä–∞–Ω–∏—Ü—ã –ø—Ä–æ—Ü–µ—Å—Å–∞ (–Ω–∞—á–∞–ª–æ/–æ–∫–æ–Ω—á–∞–Ω–∏–µ)
- –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –ø—Ä–æ—Ü–µ—Å—Å–∞ –∏ –∏—Ö —Ñ—É–Ω–∫—Ü–∏–∏

–§–æ–∫—É—Å –Ω–∞ –†–∞–∑–¥–µ–ª–µ 2 —Ü–µ–ª–µ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã!
`,
    step_details: `
–°–ï–ô–ß–ê–°: –≠–¢–ê–ü 3 - –î–ï–¢–ê–õ–¨–ù–û–ï –û–ü–ò–°–ê–ù–ò–ï –®–ê–ì–û–í
–¢–≤–æ—è –∑–∞–¥–∞—á–∞:
- –î–µ—Ç–∞–ª—å–Ω–æ –æ–ø–∏—Å–∞—Ç—å –∫–∞–∂–¥—ã–π —à–∞–≥ –ø—Ä–æ—Ü–µ—Å—Å–∞
- –í—ã—è—Å–Ω–∏—Ç—å –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —à–∞–≥–∞: –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å, –ø—Ä–æ–¥—É–∫—Ç, —Å–º–µ–∂–Ω–∏–∫, —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è
- –°–æ–±—Ä–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å—Ä–µ–¥—Å—Ç–≤–∞—Ö, –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞—Ö, –ø–æ—Ä—è–¥–∫–µ –¥–µ–π—Å—Ç–≤–∏–π
- –£—Ç–æ—á–Ω–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏

–§–æ–∫—É—Å –Ω–∞ –†–∞–∑–¥–µ–ª–µ 3 —Ü–µ–ª–µ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã!
`,
    scenario_analysis: `
–°–ï–ô–ß–ê–°: –≠–¢–ê–ü 3 - –ê–ù–ê–õ–ò–ó –°–¶–ï–ù–ê–†–ò–ï–í –í–´–ü–û–õ–ù–ï–ù–ò–Ø
–¢–≤–æ—è –∑–∞–¥–∞—á–∞:
- –í—ã—è—Å–Ω–∏—Ç—å –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
- –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å —É—Å–ª–æ–≤–∏—è –≤–µ—Ç–≤–ª–µ–Ω–∏—è –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏—Å–∫–ª—é—á–µ–Ω–∏–π
- –£—Ç–æ—á–Ω–∏—Ç—å –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã–µ –∏ —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏ –µ—Å–ª–∏ –µ—Å—Ç—å
- –ó–∞–≤–µ—Ä—à–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ –≤—Å–µ—Ö —à–∞–≥–æ–≤ –ø—Ä–æ—Ü–µ—Å—Å–∞

–ó–∞–≤–µ—Ä—à–∞–π —Å–±–æ—Ä –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –¥–ª—è –†–∞–∑–¥–µ–ª–∞ 3!
`,
    completion_ready: `
–°–ï–ô–ß–ê–°: –ó–ê–í–ï–†–®–ï–ù–ò–ï –°–ë–û–†–ê –ò–ù–§–û–†–ú–ê–¶–ò–ò
–¢–≤–æ—è –∑–∞–¥–∞—á–∞:
- –°–æ–±—Ä–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é –ø—Ä–æ—Ü–µ—Å—Å–æ–º (–†–∞–∑–¥–µ–ª 4)
- –£—Ç–æ—á–Ω–∏—Ç—å –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏, –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥, –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å
- –ü–†–ï–î–õ–û–ñ–ò–¢–¨ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —Ä–µ–≥–ª–∞–º–µ–Ω—Ç
- –°–ø—Ä–æ—Å–∏—Ç—å: "–ö–∞–∂–µ—Ç—Å—è, –º—ã —Å–æ–±—Ä–∞–ª–∏ –≤—Å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é. –•–æ—Ç–∏—Ç–µ, —á—Ç–æ–±—ã —è —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–ª —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —Ä–µ–≥–ª–∞–º–µ–Ω—Ç?"

–ì–û–¢–û–í–¨–°–Ø –ö –§–û–†–ú–ò–†–û–í–ê–ù–ò–Æ –†–ï–ì–õ–ê–ú–ï–ù–¢–ê!
`
  };

  return prompts[stage as ConversationStage] || '';
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Ä–µ–≥–ª–∞–º–µ–Ω—Ç–∞
async function generateFinalRegulation(
  messages: any[], 
  systemPrompt: string,
  dataStream: any
) {
  // –°–æ–±–∏—Ä–∞–µ–º –≤—Å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–∑ –∏—Å—Ç–æ—Ä–∏–∏ –¥–∏–∞–ª–æ–≥–∞
  const conversationContext = messages
    .map(msg => {
      const text = msg.content || msg.parts?.find((p: any) => p.type === 'text')?.text || '';
      return `${msg.role}: ${text}`;
    })
    .join('\n');

  const { object: regulation } = await (await import('ai')).generateObject({
    model,
    system: systemPrompt + `
    
    –ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û –î–õ–Ø –§–û–†–ú–ò–†–û–í–ê–ù–ò–Ø –†–ï–ì–õ–ê–ú–ï–ù–¢–ê:
    
    1. –¢—ã –¥–æ–ª–∂–µ–Ω –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –í–°–Æ –∏—Å—Ç–æ—Ä–∏—é –¥–∏–∞–ª–æ–≥–∞ –≤—ã—à–µ
    2. –ò–∑–≤–ª–µ—á—å –í–°–ï –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ ({{validated}})
    3. –°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –ü–û–õ–ù–´–ô —Ä–µ–≥–ª–∞–º–µ–Ω—Ç –°–¢–†–û–ì–û –ø–æ —Ü–µ–ª–µ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–µ:
    
    **1. –û–±—â–∏–µ –ø–æ–ª–æ–∂–µ–Ω–∏—è**
        1.1. –û—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏ –∏ –æ–±–ª–∞—Å—Ç—å –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏.
        1.2. –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ —Ä–µ–≥–ª–∞–º–µ–Ω—Ç–∞ –∏ –æ–±–ª–∞—Å—Ç—å –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è
        1.3. –ò—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã
        1.4. –¢–µ—Ä–º–∏–Ω—ã –∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è
        
    **2. –û–±—â–µ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–∞**
        2.1. –ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–∞
        2.2. –í–ª–∞–¥–µ–ª–µ—Ü –ø—Ä–æ—Ü–µ—Å—Å–∞
        2.3. –¶–µ–ª—å –ø—Ä–æ—Ü–µ—Å—Å–∞, —Ü–µ–Ω–Ω—ã–π –∫–æ–Ω–µ—á–Ω—ã–π –ø—Ä–æ–¥—É–∫—Ç –∏ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—å –ø—Ä–æ–¥—É–∫—Ç–∞ –ø—Ä–æ—Ü–µ—Å—Å–∞
        2.4. –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –ø—Ä–æ–¥—É–∫—Ç—É
        2.5. –ì—Ä–∞–Ω–∏—Ü—ã –ø—Ä–æ—Ü–µ—Å—Å–∞
        2.6. –£—á–∞—Å—Ç–Ω–∏–∫–∏ –ø—Ä–æ—Ü–µ—Å—Å–∞ –∏ –∏—Ö —Ñ—É–Ω–∫—Ü–∏–∏
        2.7. –ö–æ–ª–∏—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –ø—Ä–æ—Ü–µ—Å—Å–∞
        
    **3. –î–µ—Ç–∞–ª—å–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —à–∞–≥–æ–≤ –ø—Ä–æ—Ü–µ—Å—Å–∞**
        3.1. –î–∏–∞–≥—Ä–∞–º–º–∞ —Ü–µ–ø–æ—á–µ–∫ –∫–æ–æ–ø–µ—Ä–∞—Ü–∏–∏ (–æ–ø–∏—Å–∞—Ç–µ–ª—å–Ω–æ)
        3.2. –î–µ—Ç–∞–ª—å–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∫–∞–∂–¥–æ–≥–æ —à–∞–≥–∞
        3.3. –¢–∏–ø—ã —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
        
    **4. –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–æ–º**
        4.1. –ü–æ–∫–∞–∑–∞—Ç–µ–ª–∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø—Ä–æ—Ü–µ—Å—Å–∞ (KPI)
        4.2. –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏ –∫–æ–Ω—Ç—Ä–æ–ª—å
        4.3. –û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –∑–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è
        4.4. –ü—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–∞ –∏ –ø—Ä–æ—Ü–µ–¥—É—Ä–∞ –≤–Ω–µ—Å–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π
    
    4. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¢–û–õ–¨–ö–û –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–∑ –¥–∏–∞–ª–æ–≥–∞ - –Ω–∏—á–µ–≥–æ –Ω–µ –≤—ã–¥—É–º—ã–≤–∞—Ç—å
    5. –í–µ—Ä–Ω—É—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON —Å –ø–æ–ª—è–º–∏ title –∏ content
    `,
    providerOptions: {
      google: {
        baseURL: 'https://purple-wildflower-18a.namelomaxer.workers.dev',
        stream: true,
        thinkingConfig: { thinkingBudget: -1, includeThoughts: true },
      },
    },
    schema: z.object({
      title: z.string().describe('–û—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–µ–≥–ª–∞–º–µ–Ω—Ç–∞'),
      content: z.string().describe('–ü–æ–ª–Ω—ã–π —Ä–µ–≥–ª–∞–º–µ–Ω—Ç –≤ Markdown —Ñ–æ—Ä–º–∞—Ç–µ —Å–æ–≥–ª–∞—Å–Ω–æ —Ü–µ–ª–µ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–µ'),
    }),
    prompt: `–ù–∞ –æ—Å–Ω–æ–≤–µ –≤—Å–µ–π –∏—Å—Ç–æ—Ä–∏–∏ –¥–∏–∞–ª–æ–≥–∞ —Å—Ñ–æ—Ä–º–∏—Ä—É–π —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —Ä–µ–≥–ª–∞–º–µ–Ω—Ç. –ò—Å–ø–æ–ª—å–∑—É–π –¢–û–õ–¨–ö–û –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–∑ –¥–∏–∞–ª–æ–≥–∞:\n\n${conversationContext}`
  });

  // –°—Ç—Ä–∏–º–∏–Ω–≥ —Ä–µ–≥–ª–∞–º–µ–Ω—Ç–∞ –≤ –¥–æ–∫—É–º–µ–Ω—Ç
  dataStream.write({ type: 'data-clear', data: null });
  dataStream.write({
    type: 'data-title', 
    data: regulation.title || '–†–µ–≥–ª–∞–º–µ–Ω—Ç –ø—Ä–æ—Ü–µ—Å—Å–∞'
  });

  // –°—Ç—Ä–∏–º–∏–Ω–≥ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
  const content = regulation.content.replace(/\\n/g, '\n').replace(/\n{3,}/g, '\n\n');
  const words = content.split(' ');
  
  for (const [i, word] of words.entries()) {
    const chunk = word + (i < words.length - 1 ? ' ' : '');
    dataStream.write({ type: 'data-documentDelta', data: chunk });
    await new Promise((r) => setTimeout(r, 8));
  }

  dataStream.write({ type: 'data-finish', data: null });

  // –°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
  dataStream.write({ type: 'text-start', id: 'regulation-complete' });
  dataStream.write({
    type: 'text-delta',
    id: 'regulation-complete',
    delta: `‚úÖ –†–µ–≥–ª–∞–º–µ–Ω—Ç "${regulation.title}" —É—Å–ø–µ—à–Ω–æ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –µ–≥–æ –≤ –ø—Ä–∞–≤–æ–π –ø–∞–Ω–µ–ª–∏. –ï—Å–ª–∏ –Ω—É–∂–Ω–æ —á—Ç–æ-—Ç–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å - –ø—Ä–æ—Å—Ç–æ —Å–∫–∞–∂–∏—Ç–µ –æ–± —ç—Ç–æ–º.`,
  });
  dataStream.write({ type: 'text-end', id: 'regulation-complete' });
}